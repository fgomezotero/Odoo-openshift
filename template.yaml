apiVersion: v1
kind: Template
metadata:
  name: odoo
  annotations:
    openshift.io/display-name: "Odoo ERP con base de datos Postgres"
    description:
      Odoo es un software empresarial todo en uno que incluye CRM,
      sitio web y comercio electrónico, facturación, contabilidad, fabricación,
      gestión de almacenes y proyectos, e inventario entre otros. Como backend utiliza
      una base de datos postgres.
    iconClass: icon-postgresql
    openshift.io/documentation-url: "http://gitlab.paas.agesic.red.uy/franklin.gomez/odoo-ocp"
    openshift.io/provider-display-name: "Div. TE-Tecnologías, Agesic"

objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      template.alpha.openshift.io/wait-for-ready: "true"
    generation: 1
    labels:
      app: odoo-crm
    name: ${DATABASE_SERVICE_NAME}
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      name: ${DATABASE_SERVICE_NAME}
    strategy:
      activeDeadlineSeconds: 21600
      recreateParams:
        post:
          execNewPod:
            command:
            - /bin/bash
            - -c
            - PGPASSWORD=$POSTGRESQL_ADMIN_PASSWORD psql -h ${DATABASE_SERVICE_NAME} -c "alter user $POSTGRESQL_USER
              with createdb;" $POSTGRESQL_DATABASE
            containerName: postgresql
          failurePolicy: Abort
        timeoutSeconds: 600
      resources: {}
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: ${DATABASE_SERVICE_NAME}
      spec:
        containers:
        - env:
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: database-user
                name: ${DATABASE_SERVICE_NAME}
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-password
                name: ${DATABASE_SERVICE_NAME}
          - name: POSTGRESQL_DATABASE
            valueFrom:
              secretKeyRef:
                key: database-name
                name: ${DATABASE_SERVICE_NAME}
          - name: POSTGRESQL_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-admin-password
                name: ${DATABASE_SERVICE_NAME}
          image:
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /usr/libexec/check-container
              - --live
            failureThreshold: 3
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: postgresql
          ports:
          - containerPort: 5432
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /usr/libexec/check-container
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 512Mi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: db-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: db-data
          persistentVolumeClaim:
            claimName: vol05-${PROJECT_NAME}-${DATABASE_SERVICE_NAME}-claim
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - postgresql
        from:
          kind: ImageStreamTag
          name: postgresql:${DATABASE_VERSION}
          namespace: openshift
      type: ImageChange
    - type: ConfigChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      template.alpha.openshift.io/wait-for-ready: "true"
    creationTimestamp: null
    generation: 1
    labels:
      app: odoo-crm
    name: ${ODOO_SERVICE_NAME}
  spec:
    replicas: 1
    selector:
      app: odoo-crm
      deploymentconfig: ${ODOO_SERVICE_NAME}
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: odoo-crm
          deploymentconfig: ${ODOO_SERVICE_NAME}
      spec:
        containers:
        - env:
          - name: HOST
            value: ${DATABASE_SERVICE_NAME}
          - name: USER
            valueFrom:
              secretKeyRef:
                key: database-user
                name: ${DATABASE_SERVICE_NAME}
          - name: PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-password
                name: ${DATABASE_SERVICE_NAME}
          image: fgomezotero/odoo-ocp:v.1.0
          imagePullPolicy: IfNotPresent
          name: ${ODOO_SERVICE_NAME}
          ports:
          - containerPort: 8069
            protocol: TCP
          - containerPort: 8071
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /mnt/extra-addons
            name: odoo-ocp-1
          - mountPath: /var/lib/odoo
            name: odoo-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: odoo-ocp-1
        - name: odoo-data
          persistentVolumeClaim:
            claimName: vol05-${PROJECT_NAME}-${ODOO_SERVICE_NAME}-claim
    test: false
    triggers:
      - type: ConfigChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      template.openshift.io/expose-uri: postgres://{.spec.clusterIP}:{.spec.ports[?(.name=="postgresql")].port}
    creationTimestamp: null
    labels:
      app: odoo-crm
    name: ${DATABASE_SERVICE_NAME}
  spec:
    ports:
    - name: postgresql
      port: 5432
      protocol: TCP
      targetPort: 5432
    selector:
      name: ${DATABASE_SERVICE_NAME}
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    labels:
      app: odoo-crm
    name: ${ODOO_SERVICE_NAME}
  spec:
    ports:
    - name: 8069-tcp
      port: 8069
      protocol: TCP
      targetPort: 8069
    - name: 8071-tcp
      port: 8071
      protocol: TCP
      targetPort: 8071
    selector:
      deploymentconfig: ${ODOO_SERVICE_NAME}
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}

- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: vol05-${PROJECT_NAME}-${DATABASE_SERVICE_NAME}-claim
  spec:
    accessModes:
    - ReadWriteMany
    resources:
      requests:
        storage: 5Gi
    volumeName: vol05-${PROJECT_NAME}-${DATABASE_SERVICE_NAME}

- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    annotations:
    name: vol05-${PROJECT_NAME}-${ODOO_SERVICE_NAME}-claim
  spec:
    accessModes:
    - ReadWriteMany
    resources:
      requests:
        storage: 5Gi
    volumeName: vol05-${PROJECT_NAME}-${ODOO_SERVICE_NAME}

- apiVersion: v1
  stringData:
    database-admin-password: ${POSTGRESQL_ADMIN_PASSWORD}
    database-name: postgres
    database-password: ${POSTGRESQL_PASSWORD}
    database-user: ${POSTGRESQL_USER}
  kind: Secret
  metadata:
    annotations:
      template.openshift.io/expose-database_admin_password: '{.data[''database-admin-password'']}'
      template.openshift.io/expose-database_name: '{.data[''database-name'']}'
      template.openshift.io/expose-password: '{.data[''database-password'']}'
      template.openshift.io/expose-username: '{.data[''database-user'']}'
    creationTimestamp: null
    labels:
      app: odoo-crm
    name: ${DATABASE_SERVICE_NAME}
  type: Opaque

parameters:
  - name: PROJECT_NAME
    displayName: "Nombre del proyecto"
    description: "Necesario para incluir en la convención de nombre de los PVC"
  - name: DATABASE_SERVICE_NAME
    displayName: "Nombre del servicio de base de datos postgresql"
    description: "Todos los objetos creados para el backend de base de datos van a tener este nombre"
    value: db
  - name: ODOO_SERVICE_NAME
    displayName: "Nombre del servicio para la app Odoo 12"
    description: "Todos los objetos creados para la app Odoo van a tener este nombre"
    value: odoo
  - name: DATABASE_VERSION
    displayName: "Version de la base de datos postgresql"
    description: "La App Odoo version 12 requiere como mínimos la version de base > 9.5"
    value: "9.6"
  - name: POSTGRESQL_USER
    displayName: "Usuario dueño de la base para la App"
    description: "Usuario que va a utilizar la app odoo para conectarse y crear la base de datos"
    value: "odoo"
  - name: POSTGRESQL_PASSWORD
    displayName: "Password del usuario dueño de la base para la App"
    description: "Password del usuario que utiliza odoo para conectarse a la base de datos"
    value: "odoo"
  - name: POSTGRESQL_ADMIN_PASSWORD
    displayName: "Usuario admin del motor de base de datos"
    description: "Password del usuario admin para toda la base de datos"
    value: "postgres"

message: "Para poder acceder a la aplicacion solamente tiene que crear una route con el comando oc expose svc/${ODOO_SERVICE_NAME}"
